package com.bordeaux.tests;

import junit.framework.TestCase;

import org.junit.Test;

import com.bordeaux.tests.CreateUserMaster.*;

import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.Select;


public class CreateUserMasterTest extends TestCase {

	public void test_type() throws Exception {
		// TODO auto-generated by JUnit Helper.
		assertNotNull(CreateUserMaster.class);
	}

	public void test_instantiation() throws Exception {
		// TODO auto-generated by JUnit Helper.
		CreateUserMaster target = new CreateUserMaster();
		assertNotNull(target);
	}

	public void test_setUp_A$() throws Exception {
		// TODO auto-generated by JUnit Helper.
		CreateUserMaster target = new CreateUserMaster();
		target.setUp();
	}

	public void test_setUp_A$_T$Exception() throws Exception {
		// TODO auto-generated by JUnit Helper.
		CreateUserMaster target = new CreateUserMaster();
		try {
			target.setUp();
			fail("Expected exception was not thrown!");
		} catch (Exception e) {
		}
	}

	public void test_testCreateUserMaster_A$() throws Exception {
		// TODO auto-generated by JUnit Helper.
		CreateUserMaster target = new CreateUserMaster();
		target.testCreateUserMaster();
	}

	public void test_testCreateUserMaster_A$_T$Exception() throws Exception {
		// TODO auto-generated by JUnit Helper.
		CreateUserMaster target = new CreateUserMaster();
		try {
			target.testCreateUserMaster();
			fail("Expected exception was not thrown!");
		} catch (Exception e) {
		}
	}

	public void test_tearDown_A$() throws Exception {
		// TODO auto-generated by JUnit Helper.
		CreateUserMaster target = new CreateUserMaster();
		target.tearDown();
	}

	public void test_tearDown_A$_T$Exception() throws Exception {
		// TODO auto-generated by JUnit Helper.
		CreateUserMaster target = new CreateUserMaster();
		try {
			target.tearDown();
			fail("Expected exception was not thrown!");
		} catch (Exception e) {
		}
	}

}
